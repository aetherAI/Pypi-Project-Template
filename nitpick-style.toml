[nitpick.files.absent]
"requirements.txt" = "Install poetry, run 'poetry init' to create pyproject.toml, and move dependencies to it"
".isort.cfg" = "Move values to setup.cfg, section [isort]"

["setup.cfg"."coverage:report"]
# Regexes for lines to exclude from consideration
exclude_lines = """ 
    # Don't complain about missing debug-only code:
    def __repr__

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if tests don't hit abstract class
    abc.
    ABC
    @abstractmethod

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # Manually escape
    pragma: no cover
"""
ignore_errors = true
omit = "*__init__.py, *tests/*"

["setup.cfg"."coverage:run"]
branch = true

["setup.cfg".flake8]
max-line-length = 119
ignore = """ 
    # Do not assign a lambda expression, use a def (https://www.flake8rules.com/rules/E731.html)
    E731,
    # Line break occurred before a binary operator (https://www.flake8rules.com/rules/W503.html)
    W503,
    # Too strict & subjective
    NIP,WPS
    # Docstring related, not ready...
    D,DAR,RST
    # Found commented out code, not ready...
    E800
"""
exclude = """ 
    .git,
    __pycache__,
    # virtual environment
    .venv/,
    venv/,
    env/
    build/
    # sphinx docs
    docs/
"""
per-file-ignores = """ 
    # allow import sugar
    */__init__.py: F401
    # allow non-optimized or insecure code in tests
    *test*.py: S
"""
max_complexity = 20
statistics = true
inline-quotes = "single"

["setup.cfg".isort]
# Reference
# https://pycqa.github.io/isort/docs/configuration/options/
line_length = 119
multi_line_output = 5
include_trailing_comma = true
balanced_wrapping = true
lines_after_imports = 2

["setup.cfg"."tool:pytest"]
addopts = "--pdbcls IPython.terminal.debugger:TerminalPdb"

["pyproject.toml".tool.poetry.dev-dependencies]
ipython = "*"
ipdb = "*"
jedi = "<0.18.0"
pytest = "*"
pytest-cov = "*"
