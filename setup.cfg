[coverage:report]
exclude_lines =
    # Don't complain about missing debug-only code:
    def __repr__

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if tests don't hit abstract class
    abc.
    ABC
    @abstractmethod

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # Manually escape
    pragma: no cover

ignore_errors = True
omit = *__init__.py, *tests/*

[coverage:run]
branch = True

[flake8]
max-line-length = 119
ignore =
    # Do not assign a lambda expression, use a def (https://www.flake8rules.com/rules/E731.html)
    E731,
    # Line break occurred before a binary operator (https://www.flake8rules.com/rules/W503.html)
    W503,
    # Too strict & subjective
    NIP,WPS
    # Docstring related, not ready...
    D,DAR,RST
    # Found commented out code, not ready...
    E800

exclude =
    .git,
    __pycache__,
    # virtual environment
    .venv/,
    venv/,
    env/
    build/
    # sphinx docs
    docs/

per-file-ignores =
    # allow import sugar
    */__init__.py: F401
    # allow non-optimized or insecure code in tests
    *test*.py: S

max_complexity = 20
statistics = True
inline-quotes = single

[isort]
line_length = 100
multi_line_output = 5
include_trailing_comma = True
balanced_wrapping = True
lines_after_imports = 2

[tool:pytest]
addopts =
    --cov example_project
    --cov-report term-missing
