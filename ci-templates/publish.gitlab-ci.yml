include:
  - local: ci-templates/snippets.gitlab-ci.yml

variables:
  POETRY_REPOSITORIES_CI_PROJECT_URL: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
  POETRY_HTTP_BASIC_CI_PROJECT_USERNAME: gitlab-ci-token
  POETRY_HTTP_BASIC_CI_PROJECT_PASSWORD: ${CI_JOB_TOKEN}
  # many false positive but easy, just let the pipeline fail if invalid
  PUBLISH_TAG_PATTERN: '/^v?\d+\.\d+\.\d+/'

# HACK
.install_build_requires: &install_build_requires
  - poetry run pip install toml
  - build_requires=`poetry run python -c "import toml; print(*toml.load('pyproject.toml')['build-system']['requires'])"`
  - echo $build_requires
  - poetry run pip install $build_requires

.test-publish:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  script:
    - !reference [.snippets, install-poetry]
    - *install_build_requires
    - poetry publish --build -r ci_project --dry-run
  artifacts:
    paths:
      - dist
    expire_in: 1 day

.publish:
  rules:
    - if: $CI_COMMIT_TAG =~ $PUBLISH_TAG_PATTERN
  script:
    - !reference [.snippets, install-poetry]
    - *install_build_requires
    - echo "publish as $CI_COMMIT_TAG"
    - poetry version $CI_COMMIT_TAG
    - poetry publish --build -r ci_project

test-publish:
  stage: test
  extends: .test-publish

publish:
  stage: deploy
  extends: .publish
